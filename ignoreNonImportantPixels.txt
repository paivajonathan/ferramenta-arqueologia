
red_range = ((100, 255), (0, 150), (0, 150)) # altere os valores de acordo com a sua imagem

# Cria a máscara para os pixels dentro do intervalo de cores
mask = np.logical_and.reduce((
    image[..., 0] >= red_range[0][0],
    image[..., 0] <= red_range[0][1],
    image[..., 1] >= red_range[1][0],
    image[..., 1] <= red_range[1][1],
    image[..., 2] >= red_range[2][0],
    image[..., 2] <= red_range[2][1]
))

# Aplica a máscara à imagem
masked_image = np.zeros_like(image)
masked_image[mask] = image[mask]

print(mask.sum())

# Exibe a imagem com a máscara aplicada
plt.imshow(masked_image)
plt.show()

